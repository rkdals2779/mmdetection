#################### STEP: 0
---------- [forward_decoder](0).keyword args
@(/memory_mask(tc)) shape=(2, 16320), type=bool
	sample:           False
@(/spatial_shapes(tc)) shape=(4, 2), type=int64, quant=[ 12.   19.2  30.4  51.2  83.2 128. ]
	sample:           [ 96 128]
@(/level_start_index(tc)) shape=(4,), type=int64, quant=[    0.   7372.8 12902.4 14745.6 15667.2 16128. ]
	sample:           0
@(/valid_ratios(tc)) shape=(2, 4, 2), type=float32, quant=[0.75   0.75   0.9688 1.     1.     1.    ]
	sample:           [[1.   0.75]
 [1.   0.75]
 [1.   0.75]
 [1.   0.75]]
@(/query(tc)) shape=(2, 1070, 256), type=float32, quant=[-3.7862 -0.0489 -0.015   0.0158  0.0496  3.2062]
	sample:           0.34200313687324524
@(/memory(tc)) shape=(2, 16320, 256), type=float32, quant=[-4.231  -0.8419 -0.2438  0.2617  0.8601  4.5867]
	sample:           -0.8370065093040466
@(/reference_points(tc)) shape=(2, 1070, 4), type=float32, quant=[0.001  0.05   0.0879 0.1844 0.3672 0.9914]
	sample:           [0.7192 0.436  0.0303 0.0168]
@(/dn_mask(tc)) shape=(1070, 1070), type=bool
	sample:           False
---------- [forward_decoder](0).outputs
@(/hidden_states(tc)) shape=(6, 2, 1070, 256), type=float32, quant=[-5.1255 -0.8513 -0.2583  0.2627  0.8488  4.3478]
	sample:           -0.4361318051815033
@(/references/0(tc)) shape=(2, 1070, 4), type=float32, quant=[0.001  0.05   0.0879 0.1844 0.3672 0.9914]
	sample:           [0.7192 0.436  0.0303 0.0168]
@(/references/1(tc)) shape=(2, 1070, 4), type=float32, quant=[0.001  0.05   0.0879 0.1844 0.3672 0.9914]
	sample:           [0.7192 0.436  0.0303 0.0168]
@(/references/2(tc)) shape=(2, 1070, 4), type=float32, quant=[0.001  0.05   0.0879 0.1844 0.3672 0.9914]
	sample:           [0.7192 0.436  0.0303 0.0168]
#################### STEP: 1
---------- [forward_decoder](1).keyword args
@(/memory_mask(tc)) shape=(2, 13553), type=bool
	sample:           False
@(/spatial_shapes(tc)) shape=(4, 2), type=int64, quant=[ 11.   18.   29.   45.8  74.8 121. ]
	sample:           [ 84 121]
@(/level_start_index(tc)) shape=(4,), type=int64, quant=[    0.   6098.4 10676.4 12213.6 12986.4 13377. ]
	sample:           0
@(/valid_ratios(tc)) shape=(2, 4, 2), type=float32, quant=[0.5702 0.625  0.8333 1.     1.     1.    ]
	sample:           [[1.     0.8214]
 [1.     0.8333]
 [1.     0.8571]
 [1.     0.8182]]
@(/query(tc)) shape=(2, 1082, 256), type=float32, quant=[-3.7863 -0.0489 -0.0146  0.0153  0.0495  3.2063]
	sample:           -1.0068191289901733
@(/memory(tc)) shape=(2, 13553, 256), type=float32, quant=[-4.0159 -0.865  -0.2743  0.2574  0.868   4.3559]
	sample:           -0.6385646462440491
@(/reference_points(tc)) shape=(2, 1082, 4), type=float32, quant=[0.001  0.0499 0.0676 0.3989 0.6569 0.999 ]
	sample:           [0.6745 0.5489 0.1812 0.1053]
@(/dn_mask(tc)) shape=(1082, 1082), type=bool
	sample:           False
---------- [forward_decoder](1).outputs
@(/hidden_states(tc)) shape=(6, 2, 1082, 256), type=float32, quant=[-4.3233 -0.8604 -0.2641  0.2596  0.8581  4.0355]
	sample:           -0.9847976565361023
@(/references/0(tc)) shape=(2, 1082, 4), type=float32, quant=[0.001  0.0499 0.0676 0.3989 0.6569 0.999 ]
	sample:           [0.6745 0.5489 0.1812 0.1053]
@(/references/1(tc)) shape=(2, 1082, 4), type=float32, quant=[0.001  0.0498 0.0675 0.3987 0.6573 0.999 ]
	sample:           [0.675  0.5484 0.1808 0.1051]
@(/references/2(tc)) shape=(2, 1082, 4), type=float32, quant=[0.001  0.0498 0.0674 0.3986 0.6577 0.999 ]
	sample:           [0.6753 0.5481 0.1806 0.105 ]
#################### STEP: 2
---------- [forward_decoder](2).keyword args
@(/memory_mask(tc)) shape=(2, 20906), type=bool
	sample:           False
@(/spatial_shapes(tc)) shape=(4, 2), type=int64, quant=[ 12.   22.2  38.4  54.4  90.  167. ]
	sample:           [ 94 167]
@(/level_start_index(tc)) shape=(4,), type=int64, quant=[    0.   9418.8 16487.6 18856.4 20049.2 20654. ]
	sample:           0
@(/valid_ratios(tc)) shape=(2, 4, 2), type=float32, quant=[0.8563 0.8571 0.875  1.     1.     1.    ]
	sample:           [[1. 1.]
 [1. 1.]
 [1. 1.]
 [1. 1.]]
@(/query(tc)) shape=(2, 1082, 256), type=float32, quant=[-3.7863 -0.0489 -0.0147  0.0152  0.0494  3.2064]
	sample:           -1.0069189071655273
@(/memory(tc)) shape=(2, 20906, 256), type=float32, quant=[-3.8392 -0.8791 -0.3174  0.2446  0.9068  4.2342]
	sample:           -1.2245537042617798
@(/reference_points(tc)) shape=(2, 1082, 4), type=float32, quant=[0.001  0.0499 0.0501 0.1152 0.4695 0.9895]
	sample:           [0.7485 0.6409 0.0078 0.0416]
@(/dn_mask(tc)) shape=(1082, 1082), type=bool
	sample:           False
---------- [forward_decoder](2).outputs
@(/hidden_states(tc)) shape=(6, 2, 1082, 256), type=float32, quant=[-4.2148 -0.8579 -0.276   0.2533  0.876   4.1093]
	sample:           -1.1841470003128052
@(/references/0(tc)) shape=(2, 1082, 4), type=float32, quant=[0.001  0.0499 0.0501 0.1152 0.4695 0.9895]
	sample:           [0.7485 0.6409 0.0078 0.0416]
@(/references/1(tc)) shape=(2, 1082, 4), type=float32, quant=[0.001  0.0497 0.0501 0.1155 0.4703 0.9895]
	sample:           [0.7491 0.6406 0.0077 0.0415]
@(/references/2(tc)) shape=(2, 1082, 4), type=float32, quant=[0.001  0.0496 0.0501 0.1157 0.4706 0.9896]
	sample:           [0.7494 0.6405 0.0077 0.0415]
#################### STEP: 3
---------- [forward_decoder](3).keyword args
@(/memory_mask(tc)) shape=(2, 13600), type=bool
	sample:           False
@(/spatial_shapes(tc)) shape=(4, 2), type=int64, quant=[ 10.   17.6  29.6  44.8  73.6 128. ]
	sample:           [ 80 128]
@(/level_start_index(tc)) shape=(4,), type=int64, quant=[    0.  6144. 10752. 12288. 13056. 13440.]
	sample:           0
@(/valid_ratios(tc)) shape=(2, 4, 2), type=float32, quant=[0.9    0.9    0.9375 1.     1.     1.    ]
	sample:           [[1.  0.9]
 [1.  0.9]
 [1.  0.9]
 [1.  0.9]]
@(/query(tc)) shape=(2, 1096, 256), type=float32, quant=[-3.7864 -0.048  -0.0133  0.0137  0.0484  3.2065]
	sample:           -0.08378647267818451
@(/memory(tc)) shape=(2, 13600, 256), type=float32, quant=[-3.6581 -0.8808 -0.307   0.2507  0.9025  4.4161]
	sample:           -1.5244628190994263
@(/reference_points(tc)) shape=(2, 1096, 4), type=float32, quant=[0.001  0.0498 0.0502 0.3691 0.7598 0.9882]
	sample:           [0.4339 0.4625 0.012  0.0045]
@(/dn_mask(tc)) shape=(1096, 1096), type=bool
	sample:           False
---------- [forward_decoder](3).outputs
@(/hidden_states(tc)) shape=(6, 2, 1096, 256), type=float32, quant=[-4.0919 -0.8617 -0.277   0.248   0.8799  4.0575]
	sample:           -0.9315047264099121
@(/references/0(tc)) shape=(2, 1096, 4), type=float32, quant=[0.001  0.0498 0.0502 0.3691 0.7598 0.9882]
	sample:           [0.4339 0.4625 0.012  0.0045]
@(/references/1(tc)) shape=(2, 1096, 4), type=float32, quant=[0.001  0.0496 0.0503 0.3692 0.7607 0.9883]
	sample:           [0.4357 0.4629 0.012  0.0045]
@(/references/2(tc)) shape=(2, 1096, 4), type=float32, quant=[0.001  0.0494 0.0504 0.3694 0.7609 0.9883]
	sample:           [0.4362 0.4633 0.0119 0.0045]
#################### STEP: 4
---------- [forward_decoder](4).keyword args
@(/memory_mask(tc)) shape=(2, 14504), type=bool
	sample:           False
@(/spatial_shapes(tc)) shape=(4, 2), type=int64, quant=[ 13.   18.4  27.4  50.4  81.2 111. ]
	sample:           [111  98]
@(/level_start_index(tc)) shape=(4,), type=int64, quant=[    0.   6526.8 11426.8 13073.2 13902.  14322. ]
	sample:           0
@(/valid_ratios(tc)) shape=(2, 4, 2), type=float32, quant=[0.8378 0.8571 0.92   1.     1.     1.    ]
	sample:           [[0.9082 1.    ]
 [0.9184 1.    ]
 [0.92   1.    ]
 [0.9231 1.    ]]
@(/query(tc)) shape=(2, 1068, 256), type=float32, quant=[-3.7864 -0.0464 -0.0125  0.0128  0.0467  3.2066]
	sample:           -1.007083535194397
@(/memory(tc)) shape=(2, 14504, 256), type=float32, quant=[-3.6841 -0.9044 -0.2628  0.257   0.8934  3.858 ]
	sample:           -1.2752034664154053
@(/reference_points(tc)) shape=(2, 1068, 4), type=float32, quant=[0.001  0.0497 0.077  0.4776 0.9027 0.9898]
	sample:           [0.1781 0.122  0.0347 0.1099]
@(/dn_mask(tc)) shape=(1068, 1068), type=bool
	sample:           False
---------- [forward_decoder](4).outputs
@(/hidden_states(tc)) shape=(6, 2, 1068, 256), type=float32, quant=[-4.1104 -0.8494 -0.2792  0.2422  0.8641  3.8618]
	sample:           -1.319164752960205
@(/references/0(tc)) shape=(2, 1068, 4), type=float32, quant=[0.001  0.0497 0.077  0.4776 0.9027 0.9898]
	sample:           [0.1781 0.122  0.0347 0.1099]
@(/references/1(tc)) shape=(2, 1068, 4), type=float32, quant=[0.001  0.0495 0.0771 0.4781 0.9032 0.9898]
	sample:           [0.1788 0.122  0.0345 0.1101]
@(/references/2(tc)) shape=(2, 1068, 4), type=float32, quant=[0.001  0.0492 0.0772 0.4784 0.9032 0.9898]
	sample:           [0.1789 0.1221 0.0343 0.1105]
#################### STEP: 5
---------- [forward_decoder](5).keyword args
@(/memory_mask(tc)) shape=(2, 15648), type=bool
	sample:           False
@(/spatial_shapes(tc)) shape=(4, 2), type=int64, quant=[ 12.   18.8  30.2  49.6  80.8 128. ]
	sample:           [ 92 128]
@(/level_start_index(tc)) shape=(4,), type=int64, quant=[    0.   7065.6 12364.8 14131.2 15014.4 15456. ]
	sample:           0
@(/valid_ratios(tc)) shape=(2, 4, 2), type=float32, quant=[0.6957 0.75   0.9062 1.     1.     1.    ]
	sample:           [[1. 1.]
 [1. 1.]
 [1. 1.]
 [1. 1.]]
@(/query(tc)) shape=(2, 1092, 256), type=float32, quant=[-3.7865 -0.0483 -0.0137  0.014   0.0486  3.2066]
	sample:           -0.8984759449958801
@(/memory(tc)) shape=(2, 15648, 256), type=float32, quant=[-3.7789 -0.8912 -0.272   0.2793  0.8847  3.889 ]
	sample:           -0.8924461007118225
@(/reference_points(tc)) shape=(2, 1092, 4), type=float32, quant=[0.001  0.0496 0.0503 0.3378 0.7666 0.9882]
	sample:           [0.0707 0.6589 0.1415 0.0283]
@(/dn_mask(tc)) shape=(1092, 1092), type=bool
	sample:           False
---------- [forward_decoder](5).outputs
@(/hidden_states(tc)) shape=(6, 2, 1092, 256), type=float32, quant=[-4.0863 -0.8414 -0.2702  0.2445  0.8624  3.8788]
	sample:           -1.6261252164840698
@(/references/0(tc)) shape=(2, 1092, 4), type=float32, quant=[0.001  0.0496 0.0503 0.3378 0.7666 0.9882]
	sample:           [0.0707 0.6589 0.1415 0.0283]
@(/references/1(tc)) shape=(2, 1092, 4), type=float32, quant=[0.001  0.0494 0.0504 0.3379 0.767  0.9883]
	sample:           [0.0709 0.659  0.141  0.0283]
@(/references/2(tc)) shape=(2, 1092, 4), type=float32, quant=[0.001  0.0491 0.0506 0.3382 0.7671 0.9883]
	sample:           [0.0708 0.6591 0.1405 0.0285]
#################### STEP: 6
---------- [forward_decoder](6).keyword args
@(/memory_mask(tc)) shape=(2, 10029), type=bool
	sample:           False
@(/spatial_shapes(tc)) shape=(4, 2), type=int64, quant=[10.  15.4 23.8 40.4 65.6 99. ]
	sample:           [76 99]
@(/level_start_index(tc)) shape=(4,), type=int64, quant=[   0.  4514.4 7904.  9044.  9614.  9899. ]
	sample:           0
@(/valid_ratios(tc)) shape=(2, 4, 2), type=float32, quant=[0.8889 0.8947 0.92   1.     1.     1.    ]
	sample:           [[0.8889 1.    ]
 [0.9    1.    ]
 [0.92   1.    ]
 [0.9231 1.    ]]
@(/query(tc)) shape=(2, 1080, 256), type=float32, quant=[-3.7866 -0.0477 -0.0135  0.0137  0.0479  3.2067]
	sample:           -1.0072270631790161
@(/memory(tc)) shape=(2, 10029, 256), type=float32, quant=[-3.8866 -0.8845 -0.27    0.2855  0.8704  3.7532]
	sample:           -0.7422622442245483
@(/reference_points(tc)) shape=(2, 1080, 4), type=float32, quant=[0.001  0.0496 0.0504 0.3627 0.7191 0.999 ]
	sample:           [0.4755 0.1368 0.0491 0.0928]
@(/dn_mask(tc)) shape=(1080, 1080), type=bool
	sample:           False
---------- [forward_decoder](6).outputs
@(/hidden_states(tc)) shape=(6, 2, 1080, 256), type=float32, quant=[-4.2627 -0.8344 -0.2689  0.2411  0.8575  3.6567]
	sample:           -1.3649981021881104
@(/references/0(tc)) shape=(2, 1080, 4), type=float32, quant=[0.001  0.0496 0.0504 0.3627 0.7191 0.999 ]
	sample:           [0.4755 0.1368 0.0491 0.0928]
@(/references/1(tc)) shape=(2, 1080, 4), type=float32, quant=[0.001  0.0493 0.0505 0.3629 0.7193 0.999 ]
	sample:           [0.4762 0.1368 0.0488 0.0929]
@(/references/2(tc)) shape=(2, 1080, 4), type=float32, quant=[0.001  0.0491 0.0507 0.3631 0.7194 0.999 ]
	sample:           [0.4756 0.1368 0.0486 0.0932]
#################### STEP: 7
---------- [forward_decoder](7).keyword args
@(/memory_mask(tc)) shape=(2, 21324), type=bool
	sample:           False
@(/spatial_shapes(tc)) shape=(4, 2), type=int64, quant=[ 12.   22.2  38.4  55.2  91.2 167. ]
	sample:           [ 96 167]
@(/level_start_index(tc)) shape=(4,), type=int64, quant=[    0.   9619.2 16838.4 19257.6 20467.2 21072. ]
	sample:           0
@(/valid_ratios(tc)) shape=(2, 4, 2), type=float32, quant=[0.7904 0.8095 1.     1.     1.     1.    ]
	sample:           [[0.7904 1.    ]
 [0.7976 1.    ]
 [0.8095 1.    ]
 [0.8095 1.    ]]
@(/query(tc)) shape=(2, 1070, 256), type=float32, quant=[-3.7866 -0.0501 -0.0162  0.0161  0.05    3.2068]
	sample:           -0.8986620903015137
@(/memory(tc)) shape=(2, 21324, 256), type=float32, quant=[-3.6102 -0.889  -0.2652  0.2996  0.8637  3.8689]
	sample:           -0.7168331742286682
@(/reference_points(tc)) shape=(2, 1070, 4), type=float32, quant=[0.001  0.0494 0.0505 0.2473 0.7679 0.9886]
	sample:           [0.6846 0.2296 0.0069 0.002 ]
@(/dn_mask(tc)) shape=(1070, 1070), type=bool
	sample:           False
---------- [forward_decoder](7).outputs
@(/hidden_states(tc)) shape=(6, 2, 1070, 256), type=float32, quant=[-4.1948 -0.8339 -0.2688  0.244   0.8525  3.6933]
	sample:           -1.8204365968704224
@(/references/0(tc)) shape=(2, 1070, 4), type=float32, quant=[0.001  0.0494 0.0505 0.2473 0.7679 0.9886]
	sample:           [0.6846 0.2296 0.0069 0.002 ]
@(/references/1(tc)) shape=(2, 1070, 4), type=float32, quant=[0.001  0.0492 0.0506 0.2476 0.7683 0.9886]
	sample:           [0.6845 0.2298 0.0069 0.002 ]
@(/references/2(tc)) shape=(2, 1070, 4), type=float32, quant=[0.001  0.0489 0.0509 0.2479 0.7684 0.9886]
	sample:           [0.6836 0.2299 0.0069 0.002 ]
#################### STEP: 8
---------- [forward_decoder](8).keyword args
@(/memory_mask(tc)) shape=(2, 12660), type=bool
	sample:           False
@(/spatial_shapes(tc)) shape=(4, 2), type=int64, quant=[12.  17.4 24.8 48.4 77.6 99. ]
	sample:           [96 99]
@(/level_start_index(tc)) shape=(4,), type=int64, quant=[    0.   5702.4  9984.  11424.  12144.  12504. ]
	sample:           0
@(/valid_ratios(tc)) shape=(2, 4, 2), type=float32, quant=[0.6667 0.6667 0.78   1.     1.     1.    ]
	sample:           [[0.7677 0.6667]
 [0.78   0.6667]
 [0.8    0.6667]
 [0.7692 0.6667]]
@(/query(tc)) shape=(2, 1090, 256), type=float32, quant=[-3.7867 -0.0478 -0.0132  0.0134  0.048   3.2069]
	sample:           1.175727367401123
@(/memory(tc)) shape=(2, 12660, 256), type=float32, quant=[-3.7413 -0.888  -0.274   0.2965  0.8672  3.5216]
	sample:           -1.3048632144927979
@(/reference_points(tc)) shape=(2, 1090, 4), type=float32, quant=[0.001  0.0494 0.0506 0.2162 0.3981 0.999 ]
	sample:           [0.746  0.486  0.2237 0.972 ]
@(/dn_mask(tc)) shape=(1090, 1090), type=bool
	sample:           False
---------- [forward_decoder](8).outputs
@(/hidden_states(tc)) shape=(6, 2, 1090, 256), type=float32, quant=[-4.1419 -0.8424 -0.2554  0.2478  0.8473  3.6555]
	sample:           -0.8297922611236572
@(/references/0(tc)) shape=(2, 1090, 4), type=float32, quant=[0.001  0.0494 0.0506 0.2162 0.3981 0.999 ]
	sample:           [0.746  0.486  0.2237 0.972 ]
@(/references/1(tc)) shape=(2, 1090, 4), type=float32, quant=[0.001  0.0491 0.0508 0.2166 0.3987 0.999 ]
	sample:           [0.7464 0.4869 0.2224 0.9721]
@(/references/2(tc)) shape=(2, 1090, 4), type=float32, quant=[0.001  0.0488 0.0511 0.216  0.399  0.999 ]
	sample:           [0.7458 0.4875 0.2215 0.9723]
#################### STEP: 9
---------- [forward_decoder](9).keyword args
@(/memory_mask(tc)) shape=(2, 16757), type=bool
	sample:           False
@(/spatial_shapes(tc)) shape=(4, 2), type=int64, quant=[ 11.   19.8  34.6  48.6  80.4 150. ]
	sample:           [ 84 150]
@(/level_start_index(tc)) shape=(4,), type=int64, quant=[    0.   7560.  13230.  15120.  16069.2 16548. ]
	sample:           0
@(/valid_ratios(tc)) shape=(2, 4, 2), type=float32, quant=[0.7467 0.7895 1.     1.     1.     1.    ]
	sample:           [[1. 1.]
 [1. 1.]
 [1. 1.]
 [1. 1.]]
@(/query(tc)) shape=(2, 1070, 256), type=float32, quant=[-3.7868 -0.0472 -0.0133  0.0135  0.0475  3.2069]
	sample:           -0.08339517563581467
@(/memory(tc)) shape=(2, 16757, 256), type=float32, quant=[-3.4345 -0.8933 -0.274   0.3061  0.8539  3.7431]
	sample:           -0.549554705619812
@(/reference_points(tc)) shape=(2, 1070, 4), type=float32, quant=[0.001  0.0493 0.0507 0.183  0.4155 0.9976]
	sample:           [0.4631 0.2528 0.0147 0.1002]
@(/dn_mask(tc)) shape=(1070, 1070), type=bool
	sample:           False
---------- [forward_decoder](9).outputs
@(/hidden_states(tc)) shape=(6, 2, 1070, 256), type=float32, quant=[-4.3637 -0.8501 -0.2609  0.2515  0.8491  3.5263]
	sample:           -1.098012924194336
@(/references/0(tc)) shape=(2, 1070, 4), type=float32, quant=[0.001  0.0493 0.0507 0.183  0.4155 0.9976]
	sample:           [0.4631 0.2528 0.0147 0.1002]
@(/references/1(tc)) shape=(2, 1070, 4), type=float32, quant=[0.001  0.049  0.051  0.1833 0.4167 0.9976]
	sample:           [0.4637 0.2538 0.0146 0.1007]
@(/references/2(tc)) shape=(2, 1070, 4), type=float32, quant=[0.001  0.0487 0.0514 0.1828 0.4174 0.9975]
	sample:           [0.4629 0.2546 0.0145 0.1013]
#################### STEP: 10
#################### STEP: 11
#################### STEP: 12
^CTraceback (most recent call last):
  File "tools/train.py", line 133, in <module>
    main()
  File "tools/train.py", line 129, in main
    runner.train()
  File "/home/falcon/.pyenv/versions/Datacleaning/lib/python3.8/site-packages/mmengine/runner/runner.py", line 1706, in train
    model = self.train_loop.run()  # type: ignore
  File "/home/falcon/.pyenv/versions/Datacleaning/lib/python3.8/site-packages/mmengine/runner/loops.py", line 96, in run
    self.run_epoch()
  File "/home/falcon/.pyenv/versions/Datacleaning/lib/python3.8/site-packages/mmengine/runner/loops.py", line 112, in run_epoch
    self.run_iter(idx, data_batch)
  File "/home/falcon/.pyenv/versions/Datacleaning/lib/python3.8/site-packages/mmengine/runner/loops.py", line 128, in run_iter
    outputs = self.runner.model.train_step(
  File "/home/falcon/.pyenv/versions/Datacleaning/lib/python3.8/site-packages/mmengine/model/base_model/base_model.py", line 116, in train_step
    optim_wrapper.update_params(parsed_losses)
  File "/home/falcon/.pyenv/versions/Datacleaning/lib/python3.8/site-packages/mmengine/optim/optimizer/optimizer_wrapper.py", line 189, in update_params
